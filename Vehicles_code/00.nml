grf {
	grfid: "HS\16\20";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESC);
	version: 10;
	min_compatible_version: 5722;
	param 0 {
        param_cost_factor {
            type: int;
            name: string(STR_PARAM_BUY_NAME);
            desc: string(STR_PARAM_BUY_DESC);
            min_value: 0;
            max_value: 4;
            def_value: 2;
            names: {
					0: string(STR_PARAM_GAME_VERY_EASY);
                    1: string(STR_PARAM_GAME_EASY);
					2: string(STR_PARAM_GAME_NORMAL);
					3: string(STR_PARAM_GAME_HARD);
					4: string(STR_PARAM_GAME_VERY_HARD);
                    };
				}
			}
	param 1 {
		param_running_cost_factor {
            type: int;
            name: string(STR_PARAM_MAINTENANCE_NAME);
            desc: string(STR_PARAM_MAINTENANCE_DESC);
            min_value: 0;
            max_value: 4;
            def_value: 2;
            names: {
					0: string(STR_PARAM_GAME_VERY_EASY);
                    1: string(STR_PARAM_GAME_EASY);
					2: string(STR_PARAM_GAME_NORMAL);
					3: string(STR_PARAM_GAME_HARD);
					4: string(STR_PARAM_GAME_VERY_HARD);
                    };
				}
			}

}

parapuco = (param_cost_factor == 1) ? 2 : (param_cost_factor == 2) ? 4 : (param_cost_factor == 3) ? 8 : (param_cost_factor == 4) ? 16 : 1;
pararuco = (param_running_cost_factor == 1) ? 2 : (param_running_cost_factor == 2) ? 4 : (param_running_cost_factor == 3) ? 8 : (param_running_cost_factor == 4) ? 16 : 1;

cargotable {
//PASSENGERS CLASS
PASS, TOUR, 
//MAIL CLASS
MAIL,
//EXPRESS CLASS
GOOD,
//ARMOURED CLASS
VALU, GOLD, DIAM, 
//BULK CLASS
COAL, GRAI,  IORE, WHEA, MAIZ, CORE, SUGR, AORE, BEAN, GRVL, LIME, SAND, SCMT, 
//PIECE GOODS CLASS
LVST, WOOD, STEL, PAPR,  COPR, METL, 
//LIQUID CLASS
OIL_, RUBR, WATR, PETR, RFPR, 
//EXPRESS + REFRIGERATED CLASS
FOOD, FISH, MEAT, 
//BULK + REFRIGERATED CLASS
FRUT, 
//BULK + COVERED CLASS
CLAY, CMNT, OLSD, 
//BULK + PIECE CLASS
FERT, FICR, WDPR, RCYC, 
//HAZARDOUS CLASS

//PIECE GOODS + COVERED CLASS
BDMT, WOOL, TEXT, 
//OVERSIZED CLASS

//PIECE + OVERSIZED CLASS
GLAS, VEHI, 
//POWDERIZED CLASS (COVER)

//EXPRESS + LIQUID + REFRIGERATED
MILK, 
//EXPRESS + PIECE + LOQUID CLASS
BEER, 
//EXPRESS + PIECE CLASS
BOOM, ENSP, FMSP, JAVA, VPTS, VENG, VBOD,
//Próba
PRO1, PRO2,
}

item(FEAT_CARGOS, CargoProba1, 63)
{
	property
	{
		number:						0;
		cargo_classes:				bitmask(CC_SPECIAL);
		town_growth_effect:			TOWNGROWTH_NONE;
		cargo_label:					"PRO1";		
		type_name:						string(STR_CargoProba1__type_name);
		unit_name:						string(STR_CargoProba1__unit_name);
		units_of_cargo:				string(STR_CargoProba1__units_of_cargo);
		items_of_cargo:				string(STR_CargoProba1__items_of_cargo);
		type_abbreviation:			string(STR_CargoProba1__abbreviation);
		sprite: 						NEW_CARGO_SPRITE;
		weight:						1;
		penalty_lowerbound:			30;
		single_penalty_length:		255;
		price_factor:					100.0;
		station_list_colour:			0x01;
		cargo_payment_list_colour:	0x01;
		is_freight:					1;
	}
	graphics	
	{	
		default:	ss_toldat;
	}
}

template tmpl_purchase() {
	[0,	0,	99,	25,	-25,-15]}
	
template tmpl_1(z1){
	[0		*z1,	0,	11	*z1,	49	*z1,	-5	*z1,	-13	*z1,	ANIM]
	[19		*z1,	0,	54	*z1,	40	*z1,	-45	*z1,	-12	*z1,	ANIM]
	[81		*z1,	0,	69	*z1,	15	*z1,	-54	*z1,	-10	*z1,	ANIM]
	[158	*z1,	0,	54	*z1,	40	*z1,	-41	*z1,	-29	*z1,	ANIM]
	[220	*z1,	0,	11	*z1,	49	*z1,	-6	*z1,	-32	*z1,	ANIM]
	[239	*z1,	0,	54	*z1,	40	*z1,	-15	*z1,	-28	*z1,	ANIM]
	[301	*z1,	0,	69	*z1,	15	*z1,	-11	*z1,	-9	*z1,	ANIM]
	[378	*z1,	0,	54	*z1,	40	*z1,	-8	*z1,	-14	*z1,	ANIM]}

template tmpl_toldat() {
	[0,	0,	2,	2,	1,	1]}	

spriteset(ss_toldat, "src/icons.png")		{tmpl_toldat()}

//Wood logo, replaces ł 0x0142
font_glyph (NORMAL, 0x0142, "src/icons.png") {[20,80,24,10,0,0]}
font_glyph (SMALL, 0x0142, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (LARGE, 0x0142, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (MONO, 0x0142, "src/icons.png") {[10,80,1,1,0,0]}

//Trailer logo, replaces Ł 0x0141
font_glyph (NORMAL, 0x0141, "src/icons.png") {[60,80,29,10,0,0]}
font_glyph (SMALL, 0x0141, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (LARGE, 0x0141, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (MONO, 0x0141, "src/icons.png") {[10,80,1,1,0,0]}

//Double logo, replaces đ 0x0111
font_glyph (NORMAL, 0x0111, "src/icons.png") {[110,80,29,10,0,0]}
font_glyph (SMALL, 0x0111, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (LARGE, 0x0111, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (MONO, 0x0111, "src/icons.png") {[10,80,1,1,0,0]}

//Triple logo, replaces Đ 0x0110
font_glyph (NORMAL, 0x0110, "src/icons.png") {[160,80,25,10,0,0]}
font_glyph (SMALL, 0x0110, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (LARGE, 0x0110, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (MONO, 0x0110, "src/icons.png") {[10,80,1,1,0,0]}

//Twin logo, replaces Ń 0x0143
font_glyph (NORMAL, 0x0143, "src/icons.png") {[20,110,21,10,0,0]}
font_glyph (SMALL, 0x0143, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (LARGE, 0x0143, "src/icons.png") {[10,80,1,1,0,0]}
font_glyph (MONO, 0x0143, "src/icons.png") {[10,80,1,1,0,0]}
